<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.goalapa.cacamuca.statDomain.query.domain.respository.GetStatMapper">

    <resultMap id="statResultMap" type="com.goalapa.cacamuca.statDomain.query.application.dto.QueryStatDTO">
        <id property="statNo" column="STAT_NO"/>
        <result property="updateDate" column="UPDATE_DATE"/>
        <result property="foodNo" column="FOOD_NO"/>
        <result property="foodName" column="FOOD_NAME"/>
        <result property="reviewCnt" column="REVIEW_CNT"/>
        <result property="foodRate" column="FOOD_RATE"/>
        <result property="likeCnt" column="LIKE_CNT"/>
        <result property="memberAgeGroup" column="MEMBER_AGE_GROUP"/>
        <result property="memberGender" column="MEMBER_GENDER"/>
        <result property="foodImageUrl" column="FOOD_IMAGE_URL"/>
    </resultMap>

    <select id="findAllStats" resultMap="statResultMap">
        SELECT
                A.STAT_NO
                ,   A.UPDATE_DATE
                ,   A.FOOD_NO
                ,   A.FOOD_NAME
                ,   A.COUNTRY
                ,   A.REVIEW_CNT
                ,   A.FOOD_RATE
                ,   A.LIKE_CNT
                ,   A.MEMBER_AGE_GROUP
                ,   A.MEMBER_GENDER
                ,   A.FOOD_IMAGE_URL
        FROM
                STAT A
    </select>

    <select id="findStatsByDate" resultMap="statResultMap">
        SELECT
                    A.STAT_NO
                ,   A.UPDATE_DATE
                ,   A.FOOD_NO
                ,   A.FOOD_NAME
                ,   A.COUNTRY
                ,   A.REVIEW_CNT
                ,   A.FOOD_RATE
                ,   A.LIKE_CNT
                ,   A.MEMBER_AGE_GROUP
                ,   A.MEMBER_GENDER
                ,   A.FOOD_IMAGE_URL
        FROM
                STAT A
        WHERE
                A.UPDATE_DATE = #{ date }
    </select>

    <select id="findStatsByDateAndCountry" resultMap="statResultMap">
        SELECT
                A.STAT_NO
                ,   A.UPDATE_DATE
                ,   A.FOOD_NO
                ,   A.FOOD_NAME
                ,   A.COUNTRY
                ,   A.REVIEW_CNT
                ,   A.FOOD_RATE
                ,   A.LIKE_CNT
                ,   A.MEMBER_AGE_GROUP
                ,   A.MEMBER_GENDER
                ,   A.FOOD_IMAGE_URL
        FROM
                STAT A
        WHERE
                A.UPDATE_DATE = #{ date }
                AND
                A.COUNTRY = #{ country }
    </select>

    <select id="getStatTopTen" resultMap="statResultMap">
        SELECT
                    A.STAT_NO
                ,   A.UPDATE_DATE
                ,   A.FOOD_NO
                ,   A.FOOD_NAME
                ,   A.COUNTRY
                ,   A.REVIEW_CNT
                ,   A.FOOD_RATE
                ,   A.LIKE_CNT
                ,   A.MEMBER_AGE_GROUP
                ,   A.MEMBER_GENDER
                ,   A.FOOD_IMAGE_URL
        FROM
                STAT A
        WHERE
                A.UPDATE_DATE = #{ date }
        AND
                A.COUNTRY = #{ country }
        ORDER BY A.FOOD_RATE DESC, A.REVIEW_CNT DESC
        LIMIT 10;
    </select>


    <select id="getLikeCntByMonth" resultType="Integer">
        SELECT
                COALESCE(SUM(LIKE_CNT), 0) AS totalLikes
        FROM
                STAT
        WHERE
                FOOD_NO = #{ foodNo }
        GROUP BY
                YEAR(UPDATE_DATE), MONTH(UPDATE_DATE)
        ORDER BY
                YEAR(UPDATE_DATE), MONTH(UPDATE_DATE)
        LIMIT 6;
    </select>

    <select id="getReviewCntByMonth" resultType="Integer">
        SELECT
                COALESCE(SUM(REVIEW_CNT), 0) AS totalLikes
        FROM
                STAT
        WHERE
                FOOD_NO = #{ foodNo }
        GROUP BY
                YEAR(UPDATE_DATE), MONTH(UPDATE_DATE)
        ORDER BY
                YEAR(UPDATE_DATE), MONTH(UPDATE_DATE)
        LIMIT 6;
    </select>

    <select id="getFoodRate" resultType="java.lang.Float">
        SELECT
                COALESCE(AVG(FOOD_RATE), 0) AS foodRate
        FROM
                STAT
        WHERE
                FOOD_NO = #{ foodNo }
        GROUP BY
                YEAR(UPDATE_DATE), MONTH(UPDATE_DATE)
        ORDER BY
                YEAR(UPDATE_DATE), MONTH(UPDATE_DATE)
        LIMIT 6;
    </select>

    <select id="getGenderRatio" resultType="java.lang.Float">
        SELECT
                COUNT(*) * 100.0 / (
                        SELECT COUNT(*)
                        FROM REVIEW A
                        JOIN MEMBER B ON A.MEMBER_NO = B.MEMBER_NO
                        WHERE A.FOOD_NO = #{foodNo}
                ) AS genderRatio
        FROM
                REVIEW A
                JOIN
                MEMBER B ON A.MEMBER_NO = B.MEMBER_NO
        WHERE
                A.FOOD_NO = #{ foodNo }
                AND
                B.MEMBER_GENDER = 'F'
    </select>

    <select id="getAgeGroup" resultType="Integer">
        SELECT
                CASE
                    WHEN EXTRACT(YEAR FROM CURRENT_DATE()) - EXTRACT(YEAR FROM B.MEMBER_BIRTH) BETWEEN 10 AND 19 THEN 10
                    WHEN EXTRACT(YEAR FROM CURRENT_DATE()) - EXTRACT(YEAR FROM B.MEMBER_BIRTH) BETWEEN 20 AND 29 THEN 20
                    WHEN EXTRACT(YEAR FROM CURRENT_DATE()) - EXTRACT(YEAR FROM B.MEMBER_BIRTH) BETWEEN 30 AND 39 THEN 30
                    WHEN EXTRACT(YEAR FROM CURRENT_DATE()) - EXTRACT(YEAR FROM B.MEMBER_BIRTH) BETWEEN 40 AND 49 THEN 40
                    WHEN EXTRACT(YEAR FROM CURRENT_DATE()) - EXTRACT(YEAR FROM B.MEMBER_BIRTH) BETWEEN 50 AND 59 THEN 50
                    WHEN EXTRACT(YEAR FROM CURRENT_DATE()) - EXTRACT(YEAR FROM B.MEMBER_BIRTH) BETWEEN 60 AND 69 THEN 60
                    WHEN EXTRACT(YEAR FROM CURRENT_DATE()) - EXTRACT(YEAR FROM B.MEMBER_BIRTH) BETWEEN 70 AND 79 THEN 70
                    WHEN EXTRACT(YEAR FROM CURRENT_DATE()) - EXTRACT(YEAR FROM B.MEMBER_BIRTH) BETWEEN 80 AND 89 THEN 80
                    ELSE 0
                END AS AGE_GROUP,
                COUNT(*) AS REVIEW_CNT
        FROM
                REVIEW A
        JOIN
                MEMBER B ON A.MEMBER_NO = B.MEMBER_NO
        WHERE
                A.FOOD_NO = #{ foodNo }
        GROUP BY
                AGE_GROUP;
    </select>


</mapper>