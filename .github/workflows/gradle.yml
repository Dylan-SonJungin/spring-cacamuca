# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  pull_request:
    branches: [ "master", "release" ]
  push:
    branches:
      - release

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Add permission
        run: chmod +x gradlew
      - name: print env
        run: echo "${{ secrets.APP_EN }}"

      - name: Copy Secret
        env:
          OCCUPY_SECRETS: ${{ secrets.COMMON_ENV }}
          OCCUPY_PROD_SECRETS: ${{ secrets.PROD_ENV }}
          OCCUPY_DEV_SECRETS: ${{ secrets.DEV_ENV }}
          OCCUPY_SECRET_DIR: src/main/resources
          OCCUPY_SECRET_FILE: application.yml
          OCCUPY_SECRET_PROD_FILE: application-prod.yml
          OCCUPY_SECRET_DEV_FILE: application-dev.yml
        run: |
          echo $OCCUPY_SECRETS | base64 --decode > $OCCUPY_SECRET_DIR/$OCCUPY_SECRET_FILE &&
          echo $OCCUPY_PROD_SECRETS | base64 --decode > $OCCUPY_SECRET_DIR/$OCCUPY_SECRET_PROD_FILE &&
          echo $OCCUPY_DEV_SECRETS | base64 --decode > $OCCUPY_SECRET_DIR/$OCCUPY_SECRET_DEV_FILE &&
          find src

      - name: Check if the file exists
        run:
          ls -l ./src/main/resources
        shell: bash

      - name: Check if the file is a regular file
        run: file ./src/main/resources/application-dev.yml
        shell: bash

      - name: Setup MySQL
        uses: samin/mysql-action@v1
        with:
          mysql database: cacamuca
          mysql user: ${{ secrets.MYSQL_USERNAME }}
          mysql password: ${{ secrets.MYSQL_PASSWORD }}

      - name: Run chmod to make gradlew executable
        run: chmod +x ./gradlew |
          chmod +x src/main/resources

      - name: Test with Gradle
        run: ./gradlew --info test
        env:
          APP_EN : ${{ secrets.APP_EN }}
          PROD_DB_IP : ${{ secrets.PROD_DB_IP }}
          PROD_DB_PORT : ${{ secrets.PROD_DB_PORT }}
          DEV_DB_IP : ${{ secrets.DEV_DB_IP }}
          DEV_DB_PORT : ${{ secrets.DEV_DB_PORT }}
      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: build
        env:
          APP_EN: ${{ secrets.APP_EN }}